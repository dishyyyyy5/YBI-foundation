# -*- coding: utf-8 -*-
"""DataPreprocessing2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A-qXFDEcJo8UqzqIX_9HoS51_8AanbPH

# **DATA PREPROCESSING :**

# **IMPORT LIBRARY :**
"""

import matplotlib.pyplot as mtp

import numpy as np

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

"""# **IMPORT DATASET :**"""

dataset = pd.read_csv('/content/drive/MyDrive/datapre.csv')

dataset

dataset.head()

dataset.info()

dataset_encoded = pd.get_dummies(dataset, columns=['COUNTRY', 'COMPLETED'])

X = dataset_encoded.iloc[:, :-1].values

y = dataset_encoded.iloc[:, -1].values

print("FEATURES (X):", X)

print("TARGET (y):", y)

dataset.isnull().sum()

"""# **FILLING  MISSING VALUES :**"""

data2 = dataset.copy()

print("Before:",dataset.shape)

dataset.dropna(inplace=True)

print("After:",dataset.shape)

X

from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values=np.nan, strategy='mean')
imputer.fit(X[:, 1:3])
X[:, 1:3] = imputer.transform(X[:, 1:3])

print(X)

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
y = le.fit_transform(y)

print(y)

"""# **TRAIN TEST SPLIT :**"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 1)

print(X_train)

print(X_test)

print(y_train)

print(y_test)

"""# **NORMALISATION :**"""

from sklearn.preprocessing import MinMaxScaler
mm = MinMaxScaler()
X_train[:, 3:] = mm.fit_transform(X_train[:, 3:])
X_test[:, 3:] = mm.transform(X_test[:, 3:])

print(X_train[:, 3:])

print(X_test[:, 3:])

"""# **STANDARDIZATION :**"""

from sklearn.preprocessing import StandardScaler
sta = StandardScaler()
X_train[:, 3:] = sta.fit_transform(X_train[:, 3:])
X_test[:, 3:] = sta.transform(X_test[:, 3:])

print(X_train[:, 3:])

print(X_test[:, 3:])